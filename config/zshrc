# ZSH Completions:
# Case unsesitive
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# Combines ls and fzf for cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
# Smarter completion initialization
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
    compinit
else
    compinit -C
fi

# ZSH options
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE="20"
ZSH_AUTOSUGGEST_USE_ASYNC=1
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt glob_dots
unsetopt BEEP

# Key bindings
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "^[[A" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey "^[[B" history-substring-search-down

# Starship prompt
eval "$(starship init zsh)"

# Load zsh plugins
# Custom plugin manager for zsh
export ZPLUGINS=$HOME/.config/zsh
function zsh_add_file() {
    [ -f "$ZPLUGINS/$1" ] && source "$ZPLUGINS/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZPLUGINS/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZPLUGINS/plugins/$PLUGIN_NAME"
    fi
}

# Plugins list
zsh_add_plugin "zsh-users/zsh-autosuggestions"
zsh_add_plugin "zsh-users/zsh-syntax-highlighting"
zsh_add_plugin "zsh-users/zsh-history-substring-search"
zsh_add_plugin "joshskidmore/zsh-fzf-history-search" # Use ^r for fuzzy search history
zsh_add_plugin "Aloxaf/fzf-tab"

#SSH fix for kitty
export TERM=xterm

# MacOS specific config
if [[ $(uname -m) == 'arm64' ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    export PATH="/Users/valentin.pletea/.rd/bin:$PATH"
    # SSH agent setup
    launchctl stop com.openssh.ssh-agent
    eval "$(ssh-agent -s)" > /dev/null
    ssh-add -q ~/.ssh/id_ed25519_sk_rk_Yubikey-USB-C
fi

# Kitty specific config
if test -n "$KITTY_INSTALLATION_DIR"; then
    export KITTY_SHELL_INTEGRATION="enabled"
    autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
    kitty-integration
    unfunction kitty-integration
fi

#Aliases
alias cat='bat --theme=zenburn'
alias eza='eza --git --group-directories-first --header '\''--color=auto'\'''
alias grep='grep -n --color'
alias la='eza -a'
alias ll='ls -alh'
alias ls='eza'
alias lt='eza --tree'
alias kc='k3d cluster create -p 80:80@loadbalancer -p 443:443@loadbalancer'
alias kd='k3d cluster delete'
alias code='codium'

# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
eval "$(mise activate zsh)"