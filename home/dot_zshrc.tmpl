# Starship prompt
eval "$(starship init zsh)"

# Custom plugin manager for zsh
PLUGIN_DIR="$HOME/.config/zsh"

# Define plugins: "github_repo name"
plugins=(
"zsh-users/zsh-autosuggestions"
"zsh-users/zsh-syntax-highlighting"
"zsh-users/zsh-history-substring-search"
"aloxaf/fzf-tab" # Fuzzy completion and preview for zsh
"joshskidmore/zsh-fzf-history-search" # Use ^r for fuzzy search history
)

# Only install plugins if plugin directory does not exist
for plugin in "${plugins[@]}"; do
  plugin_name=${plugin##*/}
  if [ ! -d "$PLUGIN_DIR/$plugin_name" ]; then
    git clone --quiet "https://github.com/$plugin" "$PLUGIN_DIR/$plugin_name" --depth=1
  fi
done

# Source plugins
source "$PLUGIN_DIR/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$PLUGIN_DIR/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source "$PLUGIN_DIR/zsh-history-substring-search/zsh-history-substring-search.zsh"
source "$PLUGIN_DIR/zsh-fzf-history-search/zsh-fzf-history-search.plugin.zsh"
source "$PLUGIN_DIR/fzf-tab/fzf-tab.plugin.zsh"

{{- if eq .chezmoi.os "darwin" }}
# MacOS specific config
path+=('/opt/homebrew/bin/brew')
path+=('/usr/local/bin/brew')
eval "$(ssh-agent -s)" > /dev/null
{{- end }}

#SSH fix for kitty
{{- if lookPath "kitty" }}
export TERM=xterm
# Kitty specific config
if test -n "$KITTY_INSTALLATION_DIR"; then
    export KITTY_SHELL_INTEGRATION="enabled"
    autoload -Uz -- "$KITTY_INSTALLATION_DIR"/shell-integration/zsh/kitty-integration
    kitty-integration
    unfunction kitty-integration
fi
{{- end }}

# Key bindings
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "^[[A" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey "^[[B" history-substring-search-down

# ZSH options
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE="20"
ZSH_AUTOSUGGEST_USE_ASYNC=1
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups
setopt glob_dots
unsetopt BEEP

# Case unsesitive cd completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# Combines ls and fzf for cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# Initialize completions
autoload -Uz compinit
if [ "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)" ]; then
    compinit
else
    compinit -C
fi

#Aliases
alias grep='grep -n --color'
alias ll='ls -alh'

{{- if lookPath "bat" }}
alias cat='bat'
{{- end }}

{{- if lookPath "eza" }}
alias ls='eza'
alias lt='eza --tree'
{{- end }}

{{- if lookPath "zeditor" }}
alias code='zeditor'
{{- end }}



# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
eval "$(mise activate zsh)"
